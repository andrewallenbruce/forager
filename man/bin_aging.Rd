% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aging.R
\name{bin_aging}
\alias{bin_aging}
\title{Apply 30-Day Aging Bins}
\usage{
bin_aging(df, date)
}
\arguments{
\item{df}{\verb{<data.frame>} or \verb{<tibble>} with a required date column}

\item{date}{column of \verb{<date>}s}
}
\value{
a \link[tibble:tibble-package]{tibble}
}
\description{
Apply 30-Day Aging Bins
}
\examples{
binned <- bin_aging(
  df = load_ex(),
  date = dos
) |>
  dplyr::select(
    dos:ins_class,
    dar:aging_bin
  )

head(binned)

binned |>
  dplyr::arrange(aging_bin) |>
  dplyr::summarise(n_claims = dplyr::n(),
                   balance = sum(charges),
                   .by = aging_bin) |>
  dplyr::mutate(
    tot_claims = sum(n_claims),
    tot_balance = sum(balance),
    pct_claims = n_claims / tot_claims,
    pct_balance = balance / tot_balance) |>
  print(n = 50)

binned |>
  dplyr::arrange(aging_bin, ins_name) |>
  dplyr::summarise(
    n_claims = dplyr::n(),
    balance = sum(charges),
    .by = c(aging_bin, ins_name)
  ) |>
  dplyr::mutate(
    tot_claims = sum(n_claims),
    tot_balance = sum(balance),
    pct_claims = n_claims / tot_claims,
    pct_balance = balance / tot_balance) |>
  print(n = 50)

binned |>
  dplyr::arrange(ins_name, aging_bin) |>
  dplyr::summarise(
    n_claims = dplyr::n(),
    balance = sum(charges),
    .by = c(aging_bin, ins_name)
  ) |>
  dplyr::mutate(
    tot_claims = sum(n_claims),
    tot_balance = sum(balance),
    pct_claims = n_claims / tot_claims,
    pct_balance = balance / tot_balance,
    .by = ins_name) |>
  print(n = 50)

}
